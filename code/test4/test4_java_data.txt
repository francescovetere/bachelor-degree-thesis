$$$ global $$$
public Constraint myTest(LSet A, LSet B, LSet C) {
	return C.union(A, B).and(C.nunion(A, B));
}

$$$ local $$$

$$$ args $$$
vuoto$LSet E1 = LSet.empty()$LSet E2 = LSet.empty()$LSet E3 = LSet.empty()
var$LSet V1 = new LSet("S1")$LSet V2 = new LSet("S2")$LSet V3 = new LSet("S3")
chiuso$LSet C1 = LSet.empty().ins(new LVar("X1")).ins(new LVar("Y1"))$LSet C2 = LSet.empty().ins(new LVar("X2")).ins(new LVar("Y2"))$LSet C3 = LSet.empty().ins(new LVar("X3")).ins(new LVar("Y3"))
aperto$LSet A1 = new LSet("B1").ins(new LVar("A1"))$LSet A2 = new LSet("B2").ins(new LVar("A2"))$LSet A3 = new LSet("B3").ins(new LVar("A3"))

$$$ constraints $$$
myTest$3$prefix
